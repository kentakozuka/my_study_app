<html>
<form method="post" name="form1" action="/create_question">

	<h1>問題登録</h1>

	<table>
		<tr>
			<td>
				試験:&nbsp;
			</td>
			<td>
				<!-- ドロップダウンを表示 -->
				<select name="exam_id" size="1" onChange="onExamChanged();">
					<% examList.forEach(function(exam) { %>
						<option value = "<%= exam.ID %>" >
							<%= exam.EXAM_NAME %>
						</option>
					<% }); %>  
 				</select>
			</td>
		</tr>
		<tr>
			<td>
				親カテゴリ:&nbsp;
			</td>
			<td>
				<!-- ドロップダウンを表示 -->
				<select name="parent_question_category" size="1" onChange="onParentCategoryChanged();">
					<% parentQuestionCategoryList.forEach(function(questionCategory) { %>
						<option value = "<%= questionCategory.ID %>" >
							<%= questionCategory.CATEGORY_NAME %>
						</option>
					<% }); %>  
 				</select>
			</td>
		</tr>
		<tr>
			<td>
				子カテゴリ:&nbsp;
			</td>
			<td>
				<!-- ドロップダウンを表示 -->
				<select name="child_question_category" size="1">
					<% childQuestionCategoryList.forEach(function(questionCategory) { %>
						<option value = "<%= questionCategory.ID %>" >
							<%= questionCategory.CATEGORY_NAME %>
						</option>
					<% }); %>  
 				</select>
			</td>
		</tr>
		<tr>
			<td>
				タイトル:&nbsp;
			</td>
			<td>
				<input type="text" name="title">
			</td>
		</tr>
		<tr>
			<td>
				種別:&nbsp;
			</td>
			<td>
				<input type="radio" name="type" value="SELECT" onclick="onTypeChanged(0)" checked>４択問題
				<input type="radio" name="type" value="TYPE" onclick="onTypeChanged(1)" >コマ問
			</td>
		</tr>
		<tr>
			<td>
				問題分
			</td>
			<td>
    			<textarea name="body" rows="8" cols="40"></textarea><br/>
			</td>
		</tr>
		<tr class="selection">
			<td>
				選択肢 1:&nbsp;
			</td>
			<td>
				<input type="text" name="selection_1"><br/>
			</td>
		</tr>
		<tr class="selection">
			<td>
				選択肢 2:&nbsp;
			</td>
			<td>
				<input type="text" name="selection_2"><br/>
			</td>
		</tr>
		<tr class="selection">
			<td>
				選択肢 3:&nbsp;
			</td>
			<td>
				<input type="text" name="selection_3"><br/>
			</td>
		</tr>
		<tr class="selection">
			<td>
				選択肢 4:&nbsp;
			</td>
			<td>
				<input type="text" name="selection_4">
			</td>
		</tr>
		<tr>
			<td>
				Answer:&nbsp;
			</td>
			<td>
				<input type="text" name="answer"><br/>
			</td>
		</tr>
		<tr>
			<td>
				解説
			</td>
			<td>
    			<textarea name="explanation" rows="8" cols="40"></textarea><br/>
			</td>
		</tr>
		<tr>
			<td>
				参考URL 1:&nbsp;
			</td>
			<td>
				<input type="text" name="ref_url_1"><br/>
			</td>
			<td>
		</tr>
		<tr>
			<td>
				参考URL 2:&nbsp;
			</td>
			<td>
				<input type="text" name="ref_url_2"><br/>
			<td>
		</tr>
		<tr>
			<td>
				参考URL 3:&nbsp;
			</td>
			<td>
				<input type="text" name="ref_url_3"><br/>
			</td>
		</tr>
		<tr>
			<td>
				参考URL 4:&nbsp;
			</td>
			<td>
				<input type="text" name="ref_url_4"><br/>
			</td>
		</tr>
		<tr>
			<td>
				問題ソース:&nbsp;
			</td>
			<td>
    			<input type="text" name="qustion_src"><br/>
			</td>
		</tr>
	</table>

    <input type="submit" value="保存">
</form>
	<br/>
	<a href="/menu" class="btn">メニューに戻る</a></br>
<script>

/**
 * 問題の種別によって選択肢の表示・非表示を切り替えるメソッド
**/
function onTypeChanged(num) {
	var elements = document.getElementsByClassName('selection');
	if (num == 0) {
		for( var i=0; i < elements.length; i++ ) {
			elements[i].style.display="";
		}
	} else {
		for( var i=0; i < elements.length; i++ ) {
			elements[i].style.display="none";
		}
	}
}

/**
 * 入力値チェック関数
**/
function inputCheck() {
	console.log('hello');
	var isValid = true;
	var msg = '';
	// 設定開始
	if(document.form1.exam_id.value == 'blank'){
		msg += '試験を選択してください。\n';
		isValid = false
	}
	if(document.form1.category_name.value == ''){
		msg += 'カテゴリ名を入力してください。\n';
		isValid = false
	}
	// 設定終了
	if(isValid){
		return true;
	} else {
		window.alert(msg);
		return false;
	}
}

/**
 * 試験ドロップダウン値変更時のコールバック関数
**/
function onExamChanged() {
	// オプションのリスト
	var options = document.form1.exam_id.options;
	// 選択されている値を取得
	var value;
	for(var i=0; i<options.length; i++) {
		if( options[i].selected ){
			value = options[i].value;
			break;
		}
	}
	console.log(value);
	postForm([
		{		name:	'exam_id'
			,	value:	value
		}
	]);
}

/**
 * 親カテゴリドロップダウン値変更時のコールバック関数
**/
function onParentCategoryChanged() {
	// オプションのリスト
	var examOptions			= document.form1.exam_id.options;
	// 選択されている値を取得
	var selectedExamIdValue;
	for(var i=0; i < examOptions.length; i++) {
		if( examOptions[i].selected ){
			selectedExamIdValue = examOptions[i].value;
			break;
		}
	}
	var parentCategoryOptions	= document.form1.parent_question_category.options;
	// 選択されている値を取得
	var selectedCategoryValue;
	for(var i=0; i < parentCategoryOptions.length; i++) {
		if( parentCategoryOptions[i].selected ){
			selectedCategoryValue = parentCategoryOptions[i].value;
			break;
		}
	}
	postForm([
		{		name:	'exam_id'
			,	value:	selectedExamIdValue
		},
		{		name:	'parent_question_category'
			,	value:	selectedCategoryValue
		}
	]);
}
//TODO:共通化する
/**
 * POSTを送信する関数
 * @param 送信したいinput分のnameとvalueプロパティを持った配列
**/
function postForm(inputArray){

    var form = document.createElement( 'form' );
    document.body.appendChild( form );

	//引数のArrayの長さ分inputを登録する
	for(var i=0; i < inputArray.length; i++) {
    	var input = document.createElement( 'input' );
    	input.setAttribute( 'type',		'hidden' );
    	input.setAttribute( 'name',		inputArray[i].name );
    	input.setAttribute( 'value',	inputArray[i].value );
    	form.appendChild( input );
	}

    form.setAttribute('action',	'/edit_question' );
    form.setAttribute('method',	'post' );

    form.submit();
}
</script>
</html>
