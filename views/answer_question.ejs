<html>

<h1>問題</h1>


	<table>
		<tr>
			<td colspan="2">
				<h2><%= currentQuestion.TITLE %></h2>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<%= currentQuestion.BODY %>
			</td>
		</tr>
		<tr>
			<td>
				<button type="button" onclick="onAnswerSelected('<%- currentQuestion.SELECTION_1 %>')" >
					&nbsp; 1 &nbsp;
				</button>
			</td>
			<td>
				<%= currentQuestion.SELECTION_1 %>
			</td>
		</tr>
		<tr>
			<td>
				<button type="button" onclick="onAnswerSelected('<%- currentQuestion.SELECTION_2 %>')" >
					&nbsp; 2 &nbsp;
				</button>
			</td>
			<td>
				<%= currentQuestion.SELECTION_2 %>
			</td>
		</tr>
		<tr>
			<td>
				<button type="button" onclick="onAnswerSelected('<%- currentQuestion.SELECTION_3 %>')" >
					&nbsp; 3 &nbsp;
				</button>
			</td>
			<td>
				<%= currentQuestion.SELECTION_3 %>
			</td>
		</tr>
		<tr>
			<td>
				<button type="button" onclick="onAnswerSelected('<%- currentQuestion.SELECTION_4 %>')" >
					&nbsp; 4 &nbsp;
				</button>
			</td>
			<td>
				<%= currentQuestion.SELECTION_4 %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2">
				<%= currentQuestion.ANSWER %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2">
				<%= currentQuestion.EXPLANATION %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2" >
				<%= currentQuestion.REF_URL_1 %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2" >
				<%= currentQuestion.REF_URL_2 %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2" >
				<%= currentQuestion.REF_URL_3 %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2" >
				<%= currentQuestion.REF_URL_4 %>
			</td>
		</tr>
		<tr class="doesDisp">
			<td colspan="2" >
				<%= currentQuestion.SRC_QUESTION %>
			</td>
		</tr>
	</table>

	<button type="button" onclick="goNextQuestion()" >
		&nbsp;次の問題&nbsp;
	</button>

	<br/>
	<a href="/user_log_in" class="btn">トップへもどる</a>
	<br/>
	<a href="/user_log_out" class="btn">ログアウト</a></br>
<script>

var isCorrect;

/**
 * ロード後に呼ばれる関数
**/
window.onload = function() {
	//答えなどを非表示にする
	switchDisp(false);
}


//TODO:共通化する

/**
 * POSTを送信する関数
 * @param アクション
 * @param 送信したいinput分のnameとvalueプロパティを持った配列
**/
function postForm(action, inputArray){

    var form = document.createElement( 'form' );
    document.body.appendChild( form );

	//引数のArrayの長さ分inputを登録する
	for(var i=0; i < inputArray.length; i++) {
    	var input = document.createElement( 'input' );
    	input.setAttribute( 'type',		'hidden' );
    	input.setAttribute( 'name',		inputArray[i].name );
    	input.setAttribute( 'value',	inputArray[i].value );
    	form.appendChild( input );
	}

    form.setAttribute('action',	action );
    form.setAttribute('method',	'post' );

    form.submit();
}

/**
 * 選択肢を選んだときに呼ばれる関数
**/
function onAnswerSelected(sel) {
	console.log(sel);
	isCorrect = (sel == '<%- currentQuestion.ANSWER %>') ? 1 : 0;
	console.log(isCorrect);
	switchDisp(true);
}

/**
 * 次の問題ボタンをクリックしたときに呼ばれる関数
**/
function goNextQuestion() {
	var paramArray = [
		{
				name	: 'isCorrect'
			,	value	: isCorrect
		},
		{
				name	: 'child_question_category'
			,	value	: [<%- selectedCategoryArray %>]
		},
		{
				name	: 'commingQuestion'
			,	value	: '<%- commingQuestion %>'
		},
		{
				name	: 'pastQuestionId'
			,	value	: '<%- currentQuestion.ID %>'
		}
	];
	postForm('/answer_question', paramArray);
}

/**
 * 答えなどの表示・非表示を切り替える関数
**/
function switchDisp(doesDisp) {
	var elements = document.getElementsByClassName('doesDisp');
	if(doesDisp) {
		for( var i=0; i < elements.length; i++ ) {
			elements[i].style.display="";
		}
	} else {
		for( var i=0; i < elements.length; i++ ) {
			elements[i].style.display="none";
		}
	}
}
</script>
</html>
